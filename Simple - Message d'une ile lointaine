
#Simple - Message d'une ile lointaine (Brainfuck language - an esoteric language)

'''
Any character not "><+-.,[]" (excluding quotation marks) is ignored.

Brainf*ck is represented by an array with 30,000 cells initialized to zero
and a data pointer pointing at the current cell.

There are eight commands:
+ : Increments the value at the current cell by one.
- : Decrements the value at the current cell by one.
> : Moves the data pointer to the next cell (cell on the right).
< : Moves the data pointer to the previous cell (cell on the left).
. : Prints the ASCII value at the current cell (i.e. 65 = 'A').
, : Reads a single input character into the current cell.
[ : If the value at the current cell is zero, skips to the corresponding ] .
    Otherwise, move to the next instruction.
] : If the value at the current cell is zero, move to the next instruction.
    Otherwise, move backwards in the instructions to the corresponding [ .

[ and ] form a while loop. Obviously, they must be balanced.

Let's look at some basic brainf*ck programs.

++++++ [ > ++++++++++ < - ] > +++++ .

This program prints out the letter 'A'. First, it increments cell #1 to 6.
Cell #1 will be used for looping. Then, it enters the loop ([) and moves
to cell #2. It increments cell #2 10 times, moves back to cell #1, and
decrements cell #1. This loop happens 6 times (it takes 6 decrements for
cell #1 to reach 0, at which point it skips to the corresponding ] and
continues on).

At this point, we're on cell #1, which has a value of 0, while cell #2 has a
value of 60. We move on cell #2, increment 5 times, for a value of 65, and then
print cell #2's value. 65 is 'A' in ASCII, so 'A' is printed to the terminal.
'''
#####################################################################################
def decode(myArray):
    print("Am in method decode()")
    print(myArray)

    result = ""
    for item in myArray:
        result = result + chr(item)

    print("Decoded message: " + result)

######################################################################################
def brainfuck(cleanupSecretMessage):

    initiaisedArray = [0]*30000 #Initialising an array of 30,000 cells to 0
    cellPosition = 0
    skip = False
    x = 0
    result = ""

    #Use a 'while-loop' to be able to move both FORWARD and BACKWARD in list of instructions (in cleanupSecretMessage)
    while (x < len(cleanupSecretMessage)):

        if (cleanupSecretMessage[x] == '+'):
            if (skip == False):
                initiaisedArray[cellPosition] = initiaisedArray[cellPosition] + 1
                x = x + 1
            else:
                x = x - 1


        elif (cleanupSecretMessage[x] == '-'):
            if (skip == False):
                initiaisedArray[cellPosition] = initiaisedArray[cellPosition] - 1
                x = x + 1
            else:
                x = x - 1


        elif (cleanupSecretMessage[x] == '>'):
            if (skip == False):
                cellPosition = cellPosition + 1
                x = x + 1
            else:
                x = x - 1


        elif (cleanupSecretMessage[x] == '<'):
            if (skip == False):
                cellPosition = cellPosition - 1
                x = x + 1
            else:
                x = x - 1


        #elif (item == ','):
            #print("Idk what to do for COMMA")

        elif (cleanupSecretMessage[x] == '.'):
            if (skip == False):
                # ensure that ASCII value at current cell is appended to result
                result = result + chr(initiaisedArray[cellPosition])
                x = x + 1

        elif (cleanupSecretMessage[x] == '['):

            if (initiaisedArray[cellPosition] == 0):
                #Skip to instruction at corresponding ]
                skip = True
                x = x + 1
            else:
                #Move to next instrucction
                skip = False
                x = x + 1


        elif (cleanupSecretMessage[x] == ']'):

            if (initiaisedArray[cellPosition] == 0):
                #If cell value = 0, move to the next instruction
                skip = False
                x = x + 1
            else:
                #Move backwards in the instructions to the corresponding [
                skip = True
                x = x - 1

    print("Decoded message: "  + result)



######################################################################
#Input secret message and remove unauthorised characters
def part1():

    # User input encoded message
    secretMessage = input("Enter secret message:")

    # Ignore characters not used in brainfuck language  from Secret Message
    authorisedList = ['>', '<', '+', '-', '.', ',', '[', ']']
    cleanUpSecretMessage = []
    for item in str(secretMessage):
        if item in authorisedList:
            cleanUpSecretMessage.append(item)

    return cleanUpSecretMessage

######################################################################

message = part1()
finishedArray = brainfuck(message)

